{"version":3,"sources":["components/FeedBackOptions/FeedBackOptions.module.css","components/Statistic/Statistics.module.css","App.module.css","components/Statistic/Statistic.jsx","components/Section/Section.jsx","components/FeedBackOptions/FeedBackOptions.jsx","components/Notification/Notification.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positiveFeedbackPercentage","className","s","list","prototype","PropTypes","number","isRequired","Section","title","children","section","defaultProps","string","object","FeedbackOptions","onLeaveFeedback","buttonBox","buttonsList","buttonItems","buttonGood","type","name","onClick","buttonNeutral","buttonBad","func","Notification","message","Component","useState","setGood","setNeutral","setBad","countTotalFeedback","event","target","prevState","Math","floor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f2c2ae3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsList\":\"FeedBackOptions_buttonsList__3SDw5\",\"buttonItems\":\"FeedBackOptions_buttonItems__Bk7PN\",\"buttonGood\":\"FeedBackOptions_buttonGood__4QF7S\",\"buttonNeutral\":\"FeedBackOptions_buttonNeutral__10BXs\",\"buttonBad\":\"FeedBackOptions_buttonBad__1tHt9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__2DVeU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"App_section__1OL6S\"};","import React from 'react';\nimport s from '../Statistic/Statistics.module.css';\nimport PropTypes from 'prop-types';\n\n export default function Statistics ({ good, neutral, bad, total, positiveFeedbackPercentage}){\n    return (\n       \n           <div>\n                <ul className={s.list}>\n                <li>\n                    <p>Good: {good}</p>\n                </li>\n                <li>\n                    <p>Neutral: {neutral}</p>\n                </li>\n                <li>\n                    <p>Bad: {bad}</p>\n                </li>\n                <li>\n                    <p>Total: {total}</p>\n                </li>\n                <li>\n                    <p>Positive Feedback: {positiveFeedbackPercentage}%</p>\n                </li>\n                </ul>\n            </div>\n         \n     )\n}\n\n \nStatistics.prototype = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positiveFeedbackPercentage: PropTypes.number.isRequired,\n     \n }","import React from 'react';\nimport s from '../Section/Section.modules.css';\nimport PropTypes from 'prop-types';\n\nexport default function Section({ title = 'Title', children }){\n    return (\n        <div className={s.section}>\n            <h1 className={s.title}>{title}</h1>\n            {children}\n        </div>\n    );\n}\nSection.defaultProps = {\n  title: \"Statistics\",\n};\n\nSection.prototype = {\n    title: PropTypes.string,\n    children: PropTypes.object.isRequired,\n}","import React from 'react';\nimport s from '../FeedBackOptions/FeedBackOptions.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function FeedbackOptions ({ onLeaveFeedback }) {\n  return (\n    <div className={s.buttonBox}>\n      <ul className={s.buttonsList}>\n        <li className={s.buttonItems}>\n          <button className={s.buttonGood} type=\"button\" name=\"good\" onClick={onLeaveFeedback}>\n        Good\n      </button>\n        </li>\n        <li className={s.buttonItems}>\n           <button className={s.buttonNeutral} type=\"button\" name=\"neutral\" onClick={onLeaveFeedback}>\n        Neutral\n      </button>\n        </li>\n        <li className={s.buttonItems}>\n          <button className={s.buttonBad} type=\"button\" name=\"bad\" onClick={onLeaveFeedback}>\n        Bad\n        </button>\n        </li>\n        </ul>\n    </div>\n  );\n};\n\nFeedbackOptions.prototype = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n}","import React from \"react\";\nimport s from '../Notification/Notification.modules.css';\nimport PropTypes from 'prop-types';\n\n\nexport default function Notification({ message }) {\n    return (\n        <h2 className={s.title}>{ message}</h2>\n    )\n}\n\nNotification.prototype = {\n    message: PropTypes.string.isRequired,\n}","import { useState } from 'react';\nimport Statistics from './components/Statistic/Statistic.jsx';\nimport Section from './components/Section/Section.jsx';\nimport FeedbackOptions from './components/FeedBackOptions/FeedBackOptions.jsx';\nimport Notification from './components/Notification/Notification.jsx';\nimport s from './App.module.css';\nexport default function Component() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const toSetState = event => {\n    switch (event.target.name) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n      default:\n        return;\n    }\n  };\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n  const countPositiveFeedbackPercentage = () => {\n    return Math.floor((good * 100) / countTotalFeedback());\n  };\n\n  let total = countTotalFeedback();\n\n  return (\n    <section className={s.section}>\n      <Section title=\"Please leave feeaback\">\n        <FeedbackOptions onLeaveFeedback={toSetState} />\n      </Section>\n      {total === 0 ? (\n        <Notification message=\"No feedback given\" />\n      ) : (\n        <Section>\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positiveFeedbackPercentage={countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      )}\n    </section>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}